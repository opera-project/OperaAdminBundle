{% extends [
    easyadmin_config('design.templates.layout'),
    '@EasyAdmin/default/layout.html.twig'
] %}

{% block page_title -%}
    {% trans from 'OperaAdmin' %}Manage pages{% endtrans %}
{%- endblock %}

{% block content_title %}
    {% trans with { '%page%': page.title } from 'OperaAdmin' %}Layout for page %page%{% endtrans %}
{% endblock %}

{% block main %}
<div id="layout" class="col-sm-4">
    {% for name in page.layout.configuration.areas %}
        <label class="area area-{{ name }} {% if (loop.first and (area is not defined or area == '')) or area == name %}active{% endif %}" for="area_{{ name }}">
            <input type="radio" id="area_{{ name }}" name="current_area" value="{{ name }}" {% if (loop.first and (area is not defined or area == '')) or area == name %}checked{% endif %}/>
            {{ name }}
        </label>
    {% endfor %}
</div>

<div id="blocks" class="col-sm-8">
    {% include "@OperaAdmin/admin_pages/_new_block.html.twig" %}

    {% for name in page.layout.configuration.areas %}
        <div id="tab_area_{{ name }}" class="tab_area" 
                data-update-position-url="{{ path('update_positions', { id: page.id, area: name }) }}"
                {% if (loop.first and (area is not defined or area == '')) or area == name %}style="display: block"{% endif %}>
            <h2>{% trans with { '%area%': name } from 'OperaAdmin' %}Blocks of %area%{% endtrans %}</h2>

            {% if blocks_in_area[name] is defined %}
                <ul class="sortable">
                    {% for _block in blocks_in_area[name] %}
                    <li class="row" data-block-id="{{ _block.id }}">
                        <div class="field-group">
                            <div class="box box-default">
                                <div class="box-header with-border sort-handle">
                                    <h3 class="box-title">{{ _block.name }} (type: {{_block.type}})</h3>
                                    <a class="pull-right collapsed" role="button" data-toggle="collapse" aria-expanded="false" href="#box-body-{{ _block.id }}">
                                        <i class="fa fa-plus-square-o"></i>
                                        <i class="fa fa-minus-square-o"></i>
                                    </a>
                                </div>
                                
                                <div class="box-body collapsed collapse" id="box-body-{{ _block.id }}" aria-expanded="false">    
                                    <div class="row">
                                        <div class="col-xs-12 form-renderer">
                                            {{ render(controller(block_controller, {
                                                'block': _block,
                                                'page': page,
                                            })) }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    {% endfor %}
                </ul>
            {% else %}
                {% trans from 'OperaAdmin' %}Empty area{% endtrans %}
            {% endif %}
        </div>
        
    {% endfor %}
</div>

{# TODO exetenalize #}
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<style>
    .sortable {
        margin: 0;
        padding: 0;
        list-style-type: none;
    }

    .sortable li {
        margin: 0;
        display: block;
    }

    .ui-state-highlight { 
        background: white;
        border: 1px solid #eee;
    }

</style>
<script>
    function copyHiddenInputToAceEditor()
    {
        var all = $(".ace_editor");

        for (var i = 0; i < all.length; i++) {
            var element = all[i];
            var input = $(element).parent().next('input[type=hidden]');
            element.env.editor.setValue(input.val());
        }
    }

    $(document).ready(function() {

        copyHiddenInputToAceEditor();

        $( ".sortable" ).sortable({
            placeholder: "ui-state-highlight",
            forcePlaceholderSize: true,
            handle: '.sort-handle',
            update: function(event, ui) {
                var positions = {};   

                $('.tab_area:visible .sortable > li').each(function(index, element) {
                    positions[$(element).data('block-id')] = index;
                });

                $( ".sortable" ).addClass('loading');

                $.ajax({
                    type: "POST",
                    url: $('.tab_area:visible').data('update-position-url'),
                    data: { positions: positions },
                    success: function(data) {
                        $(".sortable").removeClass('loading');
                    }
                });

            }
        });
        $( ".sortable" ).disableSelection();

        $("#new_block_area").val($("[name=current_area]:checked")[0].value);

        $('[name=current_area]').on('change', function() {
            $('.tab_area').hide();
            $('.area.active').removeClass('active');
            $("[name=current_area]:checked").parent('label').addClass('active');
            $("#tab_area_" + $("[name=current_area]:checked")[0].value).show();
            $("#new_block_area").val($("[name=current_area]:checked")[0].value);
        });

        var formListener = function(e) {
            e.preventDefault();
            $('.tab_area form').off('submit', formListener);

            var form = this;
            $(this).addClass('loading');

            // CKEDITOR
            if (typeof CKEDITOR !== "undefined") {
                for (var instanceId in CKEDITOR.instances) {
                    CKEDITOR.instances[instanceId].element.$.value = CKEDITOR.instances[instanceId].getData();
                }
            }

            // ACE EDITOR
            var all = $(this).find(".ace_editor");
            var hiddenField = $(this).find('.hidden_code');
            
            for (var i = 0; i < all.length; i++) {
                if (all[i].env && all[i].env.editor) {
                    code = all[i].env.editor.getValue();
                    if (code && hiddenField) {
                        hiddenField.val(code);
                    }
                }
            }


            $.ajax({
                type: "POST",
                url: $(this).attr('action'),
                data: $(this).serialize(),
                success: function(data) {
                    $(form).removeClass('loading');
                    $(form).parents('.box').find('.box-title').html($(data).find('#form_name').val());
                    $(form).parents('.form-renderer').html(data);

                    $('.tab_area form').on('submit', formListener);
                    copyHiddenInputToAceEditor();
                }
            });
        };

        $('.tab_area form').on('submit', formListener);
    });
</script>
<style>
    #layout {
        display: grid;
        margin: 0 auto;
        
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat({{ page.layout.configuration.layout|length }}, 40px);
        grid-gap: 1em;
        
        grid-template-areas: {% for layout in page.layout.configuration.layout %}"{{ layout }}" {% endfor %}
    }

    .area {
        background: lightgrey;
        border: 1px solid lightgrey;
        min-height: 50px;
        padding: 1em;
        position: relative;
        overflow: hidden;
        cursor: pointer;
    }

    .loading {
        opacity: 0.6;
    }

    .area.active {
        background: white;
    }

    .area input {
        position: absolute;
        left: -3000px;
    }

    .tab_area {
        display: none;
    }

    {% for alias, name in page.layout.configuration.areas %}
        .area-{{ name }} {
            grid-area: {{ alias }};
        }
    {% endfor %}
</style>
{% endblock %}
